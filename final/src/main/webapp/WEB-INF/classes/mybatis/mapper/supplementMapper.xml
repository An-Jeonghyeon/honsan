<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="supplement">
	<!-- 인서트 -->
	<insert id="insertSupplement" parameterType="com.sp.app.supplement.Supplement">
		INSERT INTO supplement(num, userId, subject, content, hashtag, register_date, hitCount, imageFilename)
			VALUES(supplement_seq.NEXTVAL, #{userId}, #{subject}, #{content}, 
				 #{hashtag, jdbcType=VARCHAR}, SYSDATE, 0, #{imageFilename, jdbcType=VARCHAR})
	</insert>
	

	<!--  검색  -->
	<sql id="where-list">
		<choose>
			<when test="condition=='all'">
				(INSTR(subject, #{keyword}) &gt; 0 OR DBMS_LOB.INSTR(content, #{keyword})  &gt; 0)
			</when>
			<when test="condition=='register_date'">
				(TO_CHAR(register_date, 'YYYYMMDD') = #{keyword} 
					OR TO_CHAR(register_date, 'YYYY-MM-DD') = #{keyword})
			</when>
			<when test="condition=='cotent'">
				DBMS_LOB.INSTR(content, #{keyword}) &gt; 0
			</when>
			<otherwise>
				INSTR(#{condition}, #{keyword}) &gt; 0
			</otherwise>
		</choose>
	</sql>
	
	<!-- 글 리스트  -->
	<select id="listSupplement" parameterType="map" resultType="com.sp.app.supplement.Supplement">
		SELECT s.num, s.userId, userName, subject, TO_CHAR(register_date, 'YYYY-MM-DD') register_date, hitCount, imageFilename, 
   			 NVL(likeCount, 0) likeCount
		FROM supplement s
		JOIN member1 m ON s.userId = m.userId 
		LEFT OUTER JOIN(
			SELECT num, COUNT(*) likeCount 
			FROM supplement_like
			GROUP BY num
		) slk ON s.num = slk.num
		<where>
			<if test="keyword !=null and keyword !=''">
				<include refid="where-list"/>
			</if>
		</where>
		ORDER BY s.num DESC
		OFFSET #{offset} ROWS FETCH FIRST #{rows} ROWS ONLY
	</select>
	
	<!-- 글갯수 -->
	<!-- 이거 왜 조인해야돼? => 검색때문에-->
	<select id="dataCount" parameterType="Map" resultType="Integer">
		SELECT NVL(COUNT(*), 0)
		FROM supplement s
		JOIN member1 m ON s.userId=m.userId
		<where>
			<if test="keyword!=null and keyword!=''">
				<include refid="where-list"/>
			</if>
		</where>
	</select>
	
	<update id="updateHitCount" parameterType="Integer">
		UPDATE supplement SET hitCount=hitCount+1 WHERE num=#{num}
	</update>
	
	<!-- 베스트 리스트-->
	<select id="listSupplementBest" resultType="com.sp.app.supplement.Supplement">
		select num, userId, userName, subject, imageFilename, 
		         likeCount
		from (
		    SELECT s.num, s.userId, userName, subject, TO_CHAR(register_date, 'YYYY-MM-DD') register_date, hitCount, imageFilename, 
		         NVL(likeCount, 0) likeCount
		    FROM supplement s
		    JOIN member1 m ON s.userId = m.userId 
		    LEFT OUTER JOIN(
		        SELECT num, COUNT(*) likeCount 
		        FROM supplement_like
		        GROUP BY num
		    ) slk ON s.num = slk.num
		    ORDER BY likeCount DESC
		)<![CDATA[WHERE rownum <= 4]]>
	</select>
	
	<!-- 게시글 추천 추가(like) -->
	<insert id="insertSupplementLike" parameterType="map">
		INSERT INTO supplement_like(num, userId) VALUES(#{num}, #{userId})
	</insert>
	
	<!-- 게시글 추천 취소(like) -->
	<delete id="deleteSupplementLike" parameterType="map">
		DELETE FROM supplement_like WHERE num=#{num} AND userId=#{userId}
	</delete>
	
	<!-- 게시글 추천수 -->
	<select id="supplementLikeCount" parameterType="Integer" resultType="Integer">
		SELECT COUNT(*) FROM supplement_like WHERE num=#{num}
	</select>
	
	<!-- 게시글보기 -->
	<select id="readSupplement" parameterType="Integer" resultType="com.sp.app.supplement.Supplement">
		SELECT s.num, s.userId, userName, subject, content, hitCount, register_date, imageFilename, 
			NVL(likeCount, 0) likeCount
		FROM supplement s
		JOIN member1 m ON s.userId = m.userId
		LEFT OUTER JOIN (
			SELECT num, COUNT(*) likeCount
			FROM supplement_like 
			GROUP BY num
		) slk ON s.num = slk.num
		WHERE s.num=#{num}
	</select>
	
	<!-- 게시글 삭제 -->
	<delete id="deleteSupplement" parameterType="Integer">
		DELETE FROM supplement WHERE num=#{num} 
	</delete>
	
	<!-- 게시글 수정 -->
	<update id="updateSupplement" parameterType="com.sp.app.supplement.Supplement">
		UPDATE supplement SET subject=#{subject}, content=#{content}, imageFilename=#{imageFilename}
		WHERE num=#{num}
	</update>
	
	<!-- 이전글, 다음글 -->
	<select id="preReadSupplement" parameterType="map" resultType="com.sp.app.supplement.Supplement">
		SELECT num, subject
		FROM supplement s
		JOIN member1 m ON s.userId=m.userId
		<where>
			<if test="keyword!=null and keyword!=''">
				<include refid="where-list"/>
			</if>
			AND (num &gt; #{num})
		</where>
		ORDER BY num ASC
		FETCH FIRST 1 ROWS ONLY
	</select>
	
	<select id="nextReadSupplement" parameterType="map" resultType="com.sp.app.supplement.Supplement">
		SELECT num, subject
		FROM supplement s
		JOIN member1 m ON s.userId=m.userId
		<where>
			<if test="keyword!=null and keyword!=''">
				<include refid="where-list"/>
			</if>
			AND (num &lt; #{num})
		</where>
		ORDER BY num DESC
		FETCH FIRST 1 ROWS ONLY
	</select>
	
	
	
	
</mapper>