<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cookTip">
	<insert id="insertCookTip" parameterType="com.sp.app.cook.honCooq.cookTip.CookTip">
		INSERT INTO cookTip(num, userId, subject, content,
			category, register_date, hitCount) VALUES 
			( cookTip_seq.NEXTVAL, #{userId}, #{subject}, #{content},
				#{category}, SYSDATE, 0 )	
	</insert>
	
	<sql id="where-list">
		<if test="condition=='all' ">
			( INSTR(subject, #{keyword}) &gt; 0
				OR DBMS_LOB.INSTR(content, #{keyword}) &gt; 0 )
		</if>
		<if test="condition=='subject'">
			INSTR(subject, #{keyword}) &gt; 0
		</if>
		<if test="condition=='content'">
			DBMS_LOB.INSTR(content, #{keyword}) &gt; 0 
		</if>
		<if test="condition=='userName'">
			userName=#{keyword}
		</if>
		<if test="condition=='register_date'">
			( TO_CHAR(c.register_date, 'YYYY-MM-DD') = #{keyword}
				OR TO_CHAR(c.register_date, 'YYYYMMDD') = #{keyword} )
		</if>
	</sql>	
	
	<!-- 글개수 -->
	<select id="dataCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0)
		FROM cookTip c
		JOIN member1 m ON c.userId=m.userId
		<where>
			<if test="keyword!=null and keyword!='' ">
				<include refid="where-list"/> 
			</if>
		</where>   
	</select>	
	
	<!-- 글리스트 -->
    <select id="listCookTip" parameterType="map" resultType="com.sp.app.cook.honCooq.cookTip.CookTip">
		SELECT num, c.userId, userName, category, subject, content, 
		       TO_CHAR(register_date, 'YYYY-MM-DD') register_date
		FROM cookTip c
		JOIN member1 m ON c.userId=m.userId
		<where>
			<if test="keyword!=null and keyword!='' ">
				<include refid="where-list"/> 
			</if>
		</where>   
		ORDER BY num DESC
		OFFSET #{offset} ROWS FETCH FIRST #{rows} ROWS ONLY
	</select>	

	<!-- 글보기(article) -->
	<select id="readCookTip" parameterType="Integer" resultType="com.sp.app.cook.honCooq.cookTip.CookTip">
		SELECT num, c.userId, userName, subject, content, TO_CHAR(register_date, 'YYYY-MM-DD') register_date, hitCount, category
		FROM cookTip c
		JOIN  member1 m ON c.userId = m.userId
		WHERE num = #{num}                       
	</select>
	
	<!-- 조회수 증가 -->
	<update id="updateHitCount" parameterType="Integer">
		UPDATE cookTip SET hitCount = hitCount+1 WHERE num = #{num}
	</update>	
	
	<!-- 이전글 -->
	<select id="preReadCookTip" parameterType="map" resultType="com.sp.app.cook.honCooq.cookTip.CookTip">
		SELECT num, c.userId, userName, subject, content, TO_CHAR(register_date, 'YYYY-MM-DD') register_date, hitCount
		FROM cookTip c
		JOIN  member1 m ON c.userId = m.userId
		<where>
			<if test="keyword != null and keyword != '' ">
				<include refid="where-list"/>
			</if>
			AND (num &gt; #{num})
		</where>
		ORDER BY num ASC
		FETCH FIRST 1 ROWS ONLY                      
	</select>
	
	<!-- 다음글 -->	
	<select id="nextReadCookTip" parameterType="map" resultType="com.sp.app.cook.honCooq.cookTip.CookTip">
		SELECT num, c.userId, userName, subject, content, TO_CHAR(register_date, 'YYYY-MM-DD') register_date, hitCount
		FROM cookTip c
		JOIN  member1 m ON c.userId = m.userId
		<where>
			<if test="keyword != null and keyword != '' ">
				<include refid="where-list"/>
			</if>
			AND (num &lt; #{num})
		</where>
		ORDER BY num DESC
		FETCH FIRST 1 ROWS ONLY                      
	</select>
	
	<!-- 수정 -->
	<update id="updateCookTip" parameterType="com.sp.app.cook.honCooq.cookTip.CookTip">
		UPDATE cookTip SET category=#{category}, subject=#{subject}, content=#{content}
				WHERE num=#{num} AND userId = #{userId}
	</update>	

	<!-- 삭제 -->
	<delete id="deleteCookTip" parameterType="map">
		DELETE FROM cookTip WHERE num = #{num}
		<if test="userId != 'admin' ">
			AND userId = #{userId}
		</if>
	</delete>

	<!-- 게시글 좋아요 추가 -->
	<insert id="insertCookTipLike" parameterType="map">
		INSERT INTO cookTip_like(num, userId) VALUES (#{num}, #{userId})
	</insert>
      
	<!-- 게시글 좋아요 개수 -->
	<select id="cookTipLikeCount" parameterType="Integer" resultType="Integer">
		SELECT COUNT(*) FROM cookTip_like WHERE num=#{num}
	</select>
	
	<!-- 유저당 게시글 좋아요 여부 확인 -->
	<select id="readCookTipLike" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*),0) FROM cookTip_like WHERE num=#{num} AND userId=#{userId}
	</select>
	
	<!-- 게시글 좋아요 삭제 -->
	<delete id="deleteCookTipLike" parameterType="map">
		DELETE FROM cookTip_like WHERE num=#{num} AND userId=#{userId}
	</delete>
	
	<!-- 댓글 추가(insert) -->
	<insert id="insertCookTipReply" parameterType="com.sp.app.cook.honCooq.cookTip.Reply">
		INSERT INTO cookTip_reply (replyNum, num, userId, content, answer, register_date)
			VALUES (cookTipR_seq.NEXTVAL, #{num}, #{userId}, #{content}, #{answer}, SYSDATE)
	</insert>	
	
	<select id="cookTipReplyCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0) FROM cookTip_reply
		WHERE num=#{num} AND answer=0
	</select>

	<!-- 댓글리스트 -->
	<select id="listCookTipReply" parameterType="map" resultType="com.sp.app.cook.honCooq.cookTip.Reply">
		SELECT c.replyNum, c.userId, userName, num, content, c.register_date, 
		       NVL(answerCount, 0) answerCount,
		       NVL(likeCount, 0) likeCount,
		       NVL(disLikeCount, 0) disLikeCount
		FROM cookTip_reply c
		JOIN member1 m ON c.userId = m.userId
		LEFT OUTER JOIN (
			SELECT answer, COUNT(*) answerCount
			FROM cookTip_reply WHERE answer!=0 GROUP BY answer
		) a ON c.replyNum = a.answer
		LEFT OUTER JOIN (
			SELECT replyNum, COUNT(DECODE(replyLike, 1, 1)) likeCount,
				   COUNT(DECODE(replyLike, 0, 1)) disLikeCount
			FROM cookTip_replyLike GROUP BY replyNum
		) b ON c.replyNum = b.replyNum
		WHERE num=#{num}  AND c.answer=0
		ORDER BY c.replyNum DESC
		OFFSET #{offset} ROWS FETCH FIRST #{rows} ROWS ONLY
	</select>	

	<!-- 댓글 및 답글 삭제 -->
	<delete id="deleteCookTipReply" parameterType="map">
		DELETE FROM cookTip_reply
		WHERE replyNum=#{replyNum}
		<if test="mode=='reply'">
			OR answer=#{replyNum}
		</if>
	</delete>
	
	<!-- 댓글의 답글 리스트 -->
	<select id="ListCookTipReplyAnswer" parameterType="Integer" resultType="com.sp.app.cook.honCooq.cookTip.Reply">
		SELECT replyNum, num, c.userId, userName, content, register_date, answer
		FROM cookTip_reply c
		JOIN member1 m ON c.userId = m.userId
		WHERE answer = #{answer}
		ORDER BY replyNum DESC
	</select>
	
	<!-- 댓글의 답글 개수 -->
	<select id="cookTipReplyAnswerCount" parameterType="Integer" resultType="Integer">
		SELECT NVL(COUNT(*), 0)
		FROM cookTip_reply WHERE answer = #{answer}
	</select>
	
	<!-- 좋아요/싫어요 추가 -->
	<insert id="insertCookTipReplyLike" parameterType="map">
		INSERT INTO cookTip_replyLike(replyNum, userId, replyLike)
			VALUES (#{replyNum}, #{userId}, #{replyLike})
	</insert>
	
	<!-- 좋아요/싫어요 개수 -->
	<select id="cookTipReplyLikeCount" parameterType="map" resultType="map">
		SELECT COUNT(DECODE(replyLike, 1, 1)) likeCount,
			   COUNT(DECODE(replyLike, 0, 1)) disLikeCount
		FROM cookTip_replyLike WHERE replyNum = #{replyNum}
	</select>	
</mapper>