<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="bbs">
	<insert id="insertBoard" parameterType="com.sp.app.bbs.Board">
		INSERT INTO bbs(num, userId, subject, content,
			saveFilename, originalFilename, hitCount, created) VALUES  
			( bbs_seq.NEXTVAL, #{userId}, #{subject},#{content},
			 #{saveFilename, jdbcType=VARCHAR}, #{originalFilename, jdbcType=VARCHAR},
			 0, SYSDATE )
	</insert>
	
	<!-- 
		- #{필드명} : ?로 치환되고 PreparedStatement 객체로 실행
				동적인 값을 DB에 저장할 때는 반드시 #{필드명}으로 사용해야 함
				
		- ${컬럼명 또는 테이블명} : DB에 저장하거나 검색할 컬럼명 또는 테이블명이 
							동적인 경우에 사용
							값을 나타내는 부분에서 사용하면 에러 발생
							
		- CLOB 검색(4000자 넘는 문자열)에서는 DBMS_LOB.INSTR() 함수 사용
			DBMS_LOB.INSTR(컬럼명, #{keyword}) &gt; 0
			
		- VARCHAR2는 INSTR(컬럼명, #{keyword})를 이용하여 검색	
		
		- INSTR(컬럼명, #{keyword}) 대신 LIKE를 사용하는 경우
			컬럼명 LIKE '%' || #{keyword} || '%' // 앞 뒤에 뭐가 오든 상관없다는 표시
	 -->
	
	<sql id="where-list">
		<choose>
			<when test="condition=='all' ">
				( INSTR(subject, #{keyword}) &gt; 0 
					OR DBMS_LOB.INSTR(content, #{keyword}) &gt; 0 )
			</when>
			<when test="condition=='created' ">
				( TO_CHAR(created, 'YYYYMMDD') = #{keyword}
					OR TO_CHAR(created, 'YYYY-MM-DD') = #{keyword} )
			</when>
					<!-- 날짜에서 - 없애려면 서비스에서 처리하기 -->			
			
			<when test="condition=='content' ">
				DBMS_LOB.INSTR(content, #{keyword}) &gt; 0
			</when>			
			<otherwise>
				INSTR(${condition}, #{keyword}) &gt; 0
			</otherwise>
		</choose>
	</sql>
	
	<select id="dataCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0) 
		FROM bbs b
		JOIN member1 m ON b.userId = m.userId
			<where>
				<if test="keyword!=null and keyword!=''">
					<include refid="where-list"/>
				</if>
			</where>
	</select>
	
	<select id="listBoard" parameterType="map"
		resultType="com.sp.app.bbs.Board"> <!-- map에는 condition, keyword, offset, rows 등이 저장되어 넘어온다 -->
		SELECT num, b.userId, userName, subject, saveFilename, 
			hitCount, TO_CHAR(created, 'YYYY-MM-DD') created
		FROM bbs b
		JOIN member1 m ON b.userId = m.userId
		<where>
			<if test="keyword!=null and keyword!=''">
				<include refid="where-list"/>
			</if>
		</where>
		ORDER BY num DESC
		OFFSET #{offset} ROWS FETCH FIRST #{rows} ROWS ONLY
	</select>	
	
	<select id="readBoard" parameterType="Integer" 
			resultType="com.sp.app.bbs.Board">
		SELECT num, b.userId, userName, subject, content,
			saveFilename, originalFilename, hitCount, created
		FROM bbs b
		JOIN member1 m ON b.userId=m.userId
		WHERE num=#{num}
	</select>
	
	<select id="updateHitCount" parameterType="Integer">
		UPDATE bbs SET hitCount = hitCount+1 WHERE num=#{num}
	</select>
	
	<select id="preReadBoard" parameterType="map" resultType="com.sp.app.bbs.Board">
		SELECT num, subject
		FROM bbs b
		JOIN member1 m ON b.userId=m.userId
		<where>
			<if test="keyword!=null and keyword!=''">
				<include refid="where-list"/>
			</if>
			AND (num &gt; #{num})
		</where>
		ORDER BY num ASC
		FETCH FIRST 1 ROWS ONLY
	</select>
	
	<select id="nextReadBoard" parameterType="map" resultType="com.sp.app.bbs.Board">
		SELECT num, subject
		FROM bbs b
		JOIN member1 m ON b.userId=m.userId
		<where>
			<if test="keyword!=null and keyword!=''">
				<include refid="where-list"/>
			</if>
			AND (num &lt; #{num})
		</where>
		ORDER BY num DESC
		FETCH FIRST 1 ROWS ONLY	
	</select>

	<update id="updateBoard" parameterType="com.sp.app.bbs.Board">
		UPDATE bbs SET subject=#{subject}, content=#{content},
			saveFilename=#{saveFilename, jdbcType=VARCHAR},
			originalFilename=#{originalFilename, jdbcType=VARCHAR}
			WHERE num=#{num} 
	</update>

	<delete id="deleteBoard" parameterType="Integer">
		DELETE FROM bbs WHERE num=#{num}
	</delete>

	<!-- 게시글 공감 -->


	<!-- 리플(댓글) -->
	<insert id="insertReply" parameterType="com.sp.app.bbs.Reply">
		INSERT INTO bbsReply(replyNum, num, userId, content, answer, created)
			VALUES (bbsReply_seq.NEXTVAL, #{num}, #{userId}, #{content}, #{answer}, SYSDATE) 
	</insert>
</mapper>
