@charset "UTF-8";


/* roomlist */

* {
	margin:0; padding:0;
}

.body-container {
    clear:both;
    box-sizing: border-box;  /* padding과 border는 크기에 포함되지 않음 */
    margin: 0px auto 15px;
    min-height: 500px;
    padding-top: 20px;
}

hr {
  border:0.1px solid #ccc;
}

.searchlist{
	background: #e4e4e4;
	height: 160px;
	
}



.lbl {
	position: absolute;
	margin-left: 15px;
	margin-top: 15px;
	color: #999999;
	font-size: 15pt;
}

.searchTF {
	width: 400px;
	height: 40px;
	padding: 5px;
	padding-left: 15px;
	border: 1px solid #999999;
	color: #333333;
	font-size: 14px;
	border-radius: 4px;
}

.searchTF:focus{
	border: 1px solid #ff8000;
}
.searchbtn{
	font-size: 20px; 
	border:none;
	background:#d7def7;
	width: 90px;
	height: 55px;
	border-radius:4px;
	color: #000;
}

.searchbtn:hover, .redobtn:hover {
	background:#a7b7ed;
	box-shadow: 0 0 10px #c0c0c0;
}

.redobtn{
	font-size: 15px; 
	border:none;
	background:#d7def7;
	width: 150px;
	height: 45px;
	border-radius:4px;
	color: #000;
}


.mainexplain{
	width: 100%;
	height: 30px;
	
}

.listTd{
	width:220px;
	align-items: center;
}

.imgLayout:hover{
	box-shadow: 10px 10px 20px #c0c0c0;
}
.imgLayout{
	padding: 10px;
}

.roomlist{
	width:100%;
	margin: 30px auto 30px;
}



.banner{
	width: 100%;
    height: 500px;
    background-image: url("https://s.zigbang.com/v1/web/main/hero_img_1440.jpg");
    background-repeat: no-repeat;
    background-size: cover;
    background-position: center -300px;
    background-position: center;
    margin: 0 auto;
}

.createdbtn{
	align-items: right;
	font-size: 30px; 
	font-weight:bold;
	border:none;
	background:#9dafec;
	width: 300px;
	height: 70px;
	border-radius:4px;
	color: #000;
	margin-left: 70%;
	margin-top: 350px;
}
.createdbtn:hover{
	background:#a7b7ed;
	box-shadow: 0 0 10px #c0c0c0;
}
.createdbtn:active{
	background:#617dde;
	color: white;
	border: none;
	
}
.title-style{
	text-overflow: ellipsis;
}

.searchcheckbox{
	font-size: 15px;
}

.searchcheckbox{
	transform : scale(1.5);
}
.guest-more:hover{
	color: white;
	cursor: pointer;
	
}






.section{
  display: flex;
  min-height: 100px;  
  text-align: center;

  font-weight: 700;
  text-transform: uppercase;
}


.section__item{
  margin: auto;
}
.r-link.text-flat:hover{
  --rLinkColor: var(--textFlatColorHover, #fff);
}
.text-flat:not(.r-link):hover{
  color: var(--textFlatColorHover, #fff);
}
.text-outlined.r-link{
  --rLinkDisplay: var(--textOutlinedDisplay);
  --rLinkColor: var(--textOutlinedColor, currentColor);
}
.text-outlined:not(.r-link):not(.r-button){
  display: var(--textOutlinedDisplay, inline-flex);
  color: var(--textOutlinedColor, currentColor);
}
.r-link[href]{
  color: var(--rLinkColor) !important;
  text-decoration: var(--rLinkTextDecoration, none) !important;
}
.r-link{
  display: var(--rLinkDisplay, inline-flex) !important;
}

/* 
outlined text
*/ 

.text-outlined{
  --uiTextOutlinedWeight: var(--textOutlinedWeight, 2px);
  --uiTextOutlinedLineColor: var(--textOutlinedLineColor, currentColor);

  padding: var(--textOutlinedPadding, .25rem);
  position: var(--textOutlinedPosition, relative);
}

.text-outlined__label{
  display: var(--textOutlinedLabelDisplay, block);
}

.text-outlined::before,
.text-outlined::after,
.text-outlined__label::before,
.text-outlined__label::after{
  content: "";     
  background-color: var(--uiTextOutlinedLineColor);
  position: absolute; 
}

.text-outlined::before, 
.text-outlined::after{
  width: 100%;
  height: var(--uiTextOutlinedWeight);
  left: 0;
}

.text-outlined__label::before,
.text-outlined__label::after{
  width: var(--uiTextOutlinedWeight);
  height: 100%;
  top: 0;
}

.text-outlined::before{
  top: 0;
}

.text-outlined::after{
  bottom: 0;
}

.text-outlined__label::before{
  left: 0;
}

.text-outlined__label::after{
  right: 0;
}

/*
adapters
*/

.text-outlined:not(.r-link):not(.r-button){
  display: var(--textOutlinedDisplay, inline-flex);
  color: var(--textOutlinedColor, currentColor);
}

.text-outlined.r-link{
  --rLinkDisplay: var(--textOutlinedDisplay);
  --rLinkColor: var(--textOutlinedColor, currentColor);
}

.text-underlined{
  /*
  1. I use pixels units because others units (em, rem, vw, vh, etc) can
  lead to the mistake of displaying a circumcised line
  */

  --uiTextUnderlinedLineHeight: var(--textUnderlinedLineHeight, 2px); /* 1 */
  --uiTextUnderlinedLineGap: var(--textUnderlinedLineGap, .5rem);
  --uiTextUnderlinedPaddingBottom: calc(var(--uiTextUnderlinedLineHeight) + var(--uiTextUnderlinedLineGap));

  padding-bottom: var(--uiTextUnderlinedPaddingBottom) !important;
  position: var(--textUnderlinedPosition, relative) !important;
}

.text-underlined::after{
  content: "";
  width: var(--textUnderlinedLineWidht, 100%) !important;
  height: var(--uiTextUnderlinedLineHeight) !important;

  background-color: var(--textUnderlinedLineColor, currentColor) !important;

  position: absolute;
  left: var(--textUnderlinedLineLeft, 0) !important;
  bottom: var(--textUnderlinedLineBottom, 0) !important;
}

/* 
text flat
*/ 

.text-flat{
  position: relative;
  z-index: 0;
}

.text-flat::before, 
.text-flat::after{
  content: "";
  background-color: var(--textFlatBackgroundColor, #000); 
  position: absolute;
  z-index: -1;
}

.text-flat__label{
  padding: var(--textFlatPadding, .25rem);
}

/*
=====
CORE STYLES
=====
*/

/* 
text-outlined extension
*/ 

.text-outlined{
  --uiTextOutlineLineDefaultTransitionProperty: var(--textOutlineLineDefaultTransitionProperty, transform, opacity);
  --uiTextOutlineLineDefaultTransitionDuration: var(--textOutlineLineDefaultTransitionDuration, .2s, .15s);
  --uiTextOutlineLineDefaultTransitionTimingFunction: var(--textOutlineLineDefaultTransitionTimingFunction, ease-out);
  --uiTextOutlineLineDefaultTransitionDelay: var(--textOutlineLineDefaultTransitionDelay, 0s, .15s);

  --uiTextOutlineLineDefaultWillChange: var(--textOutlineLineWillChange, transform, opacity);
  
  overflow: hidden;
}

.text-outlined::before{
  transform: var(--textOutlineTopLineTransform, translate3d(-105%, 0, 0));
  transition-property: var(--textOutlineTopLineTransitionProperty, var(--uiTextOutlineLineDefaultTransitionProperty));
  transition-duration: var(--textOutlineTopLineTransitionDuration, var(--uiTextOutlineLineDefaultTransitionDuration));
  transition-timing-function: var(--textOutlineTopLineTransitionTimingFunction, var(--uiTextOutlineLineDefaultTransitionTimingFunction));
  transition-delay: var(--textOutlineTopLineTransitionDelay, var(--uiTextOutlineLineDefaultTransitionDelay));

  will-change: var(--textOutlineTopLineWillChange, var(--uiTextOutlineLineDefaultWillChange));
}

.text-outlined::after{
  transform: var(--textOutlineBottomLineTransform, translate3d(105%, 0, 0));
  transition-property: var(--textOutlineBottomLineTransitionProperty, var(--uiTextOutlineLineDefaultTransitionProperty));
  transition-duration: var(--textOutlineBottomLineTransitionDuration, var(--uiTextOutlineLineDefaultTransitionDuration));
  transition-timing-function: var(--textOutlineBottomLineTransitionTimingFunction, var(--uiTextOutlineLineDefaultTransitionTimingFunction));
  transition-delay: var(--textOutlineBottomLineTransitionDelay, var(--uiTextOutlineLineDefaultTransitionDelay));

  will-change: var(--textOutlineBottomLineWillChange, var(--uiTextOutlineLineDefaultWillChange));
}

.text-outlined__label::before{
  transform: var(--textOutlineLeftLineTransform, translate3d(0%, -100%, 0));
  transition-property: var(--textOutlineLeftLineTransitionProperty, var(--uiTextOutlineLineDefaultTransitionProperty));
  transition-duration: var(--textOutlineLeftLineTransitionDuration, var(--uiTextOutlineLineDefaultTransitionDuration));
  transition-timing-function: var(--textOutlineLeftLineTransitionTimingFunction, var(--uiTextOutlineLineDefaultTransitionTimingFunction));
  transition-delay: var(--textOutlineLeftLineTransitionDelay, var(--uiTextOutlineLineDefaultTransitionDelay));

  will-change: var(--textOutlineLeftLineWillChange, var(--uiTextOutlineLineDefaultWillChange))
}

.text-outlined__label::after{
  transform: var(--textOutlineRightLineTransform, translate3d(0%, 100%, 0));

  transition-property: var(--textOutlineRightLineTransitionProperty, var(--uiTextOutlineLineDefaultTransitionProperty));
  transition-duration: var(--textOutlineRightLineTransitionDuration, var(--uiTextOutlineLineDefaultTransitionDuration)); 
  transition-timing-function: var(--textOutlineRightLineTransitionTimingFunction, var(--uiTextOutlineLineDefaultTransitionTimingFunction));
  transition-delay: var(--textOutlineRightLineTransitionDelay, var(--uiTextOutlineLineDefaultTransitionDelay));

  will-change: var(--textOutlineRightLineWillChange, var(--uiTextOutlineLineDefaultWillChange));
}

.text-outlined::before,
.text-outlined::after,
.text-outlined__label::before,
.text-outlined__label::after{
  opacity: 0;
}

.text-outlined:hover::before,
.text-outlined:hover::after,
.text-outlined:hover .text-outlined__label::before,
.text-outlined:hover .text-outlined__label::after{
  opacity: 1;
}

/*
text-underlined extension
*/

.text-underlined{
  overflow: hidden;
}

.text-underlined::after{
  transform: var(--textUnderlinedLineTransform);
  
  transition-property: var(--textUnderlinedLineTransitionProperty, transform);
  transition-duration: var(--textUnderlinedLineTransitionDuration, .2s); 
  transition-timing-function: var(--textUnderlinedLineTransitionTimingFunction, ease-in);
  transition-delay: var(--textUnderlinedLineTransitionDelay, 0s);

  will-change: var(--textUnderlinedLineWillChange, transform);
}

/* 
flat text extension
*/ 

.text-flat{
  overflow: hidden;
  transition: color .3s ease-out;
}

.text-flat{
  --uiTextFlatDefaultOpacity: var(--textFlatDefaultOpacity, 0);
  --uiTextFlatDefaultTransitionProperty: var(--textFlatDefaultTransitionProperty, transform, opacity);
  --uiTextFlatDefaultTransitionTiming: var(--textFlatDefaultTransitionTiming,  ease-out);
  --uiTextFlatDefaultTransitionDelay: var(--textFlatDefaultTransitionDelay, 0, .03s);
  --uiTextFlatDefaultTransitionDuration: var(--textFlatDefaultTransitionDuration, .2s);
}

.text-flat__label{
  display: block;
}

.text-flat::before{
  width: var(--textFlatFirstPlaneWidth, auto);
  height: var(--textFlatFirstPlaneHeight, auto);

  top: var(--textFlatFirstPlaneTop, auto);
  right: var(--textFlatFirstPlaneRight, auto);
  bottom: var(--textFlatFirstPlaneBottom, auto);
  left: var(--textFlatFirstPlaneLeft, auto);

  opacity: var(--textFlatFirstPlaneOpacity, var(--uiTextFlatDefaultOpacity)); 

  transform: var(--textFlatFirstPlaneTransform);

  transition-property: var(--textFlatFirstPlaneTransitionProperty, var(--uiTextFlatDefaultTransitionProperty));
  transition-timing-function: var(--textFlatFirstPlaneTransitionTimingFunction, var(--uiTextFlatDefaultTransitionTiming));
  transition-delay: var(--textFlatFirstPlaneTransitionDelay, var(--uiTextFlatDefaultTransitionDelay));
  transition-duration: var(--textFlatFirstPlaneTransitionDuration, var(--uiTextFlatDefaultTransitionDuration));  
}

.text-flat::after{
  width: var(--textFlatSecondPlaneWidth, auto);
  height: var(--textFlatSecondPlaneHeigth, auto);

  top: var(--textFlatSecondPlaneTop, auto);
  right: var(--textFlatSecondPlaneRight, auto);
  bottom: var(--textFlatSecondPlaneBottom, auto);
  left: var(--textFlatSecondPlaneLeft, auto);  

  transform: var(--textFlatSecondPlaneTransform);
  opacity: var(--textFlatSecondPlaneOpacity, var(--uiTextFlatDefaultOpacity));  

  transition-property: var(--textFlatSecondPlaneTransitionProperty, var(--uiTextFlatDefaultTransitionProperty));
  transition-timing-function: var(--textFlatSecondPlaneTransitionTimingFunction, var(--uiTextFlatDefaultTransitionTiming));
  transition-delay: var(--textFlatSecondPlaneTransitionDelay, var(--uiTextFlatDefaultTransitionDelay));
  transition-duration: var(--textFlatSecondPlaneTransitionDuration, var(--uiTextFlatDefaultTransitionDuration));  
}

.text-flat:hover::before, 
.text-flat:hover::after{
  opacity: 1;
  transition-duration: var(--textFlatTransitionDurationHover, .35s);
  transition-delay: var(--textFlatTransitionDelayHover, 0s);
}

.text-flat:not(.r-link):hover{
  color: var(--textFlatColorHover, #fff);
}

.r-link.text-flat:hover{
  --rLinkColor: var(--textFlatColorHover, #fff);
}

.flat__label{
  display: block;
}

/* 
sliding text
*/ 

.text-sliding{
  --uiTextSlidingDefaultColor: var(--textSlidingDefaultColor, currentColor);
  
  --uiTextSlidingDefaultTransitionProperty: var(--textSlidingDefaultTransitionProperty, transform);
  --uiTextSlidingDefaultTransitionTiming: var(--textSlidingDefaultTransitionTiming, cubic-bezier(.86, .6, .08, 1.01)); 
  --uiTextSlidingDefaultTransitionDuration: var(--textSlidingDefaultTransitionDuration, .35s);
  
  --uiTextSlidingDefaultWillChange: var(--textSlidingDefaultWillChange, transform);

  position: relative;
  overflow: hidden;
}

.text-sliding::before{
  content: attr(data-text-sliding);
  position: absolute;
}

.text-sliding::before{
  color: var(--textSlidingBackColor, --uiTextSlidingDefaultColor);
  transform: var(--textSlidingBackTransform);

  transition-property: var(--textSlidingBackTransitionProperty, var(--uiTextSlidingDefaultTransitionProperty));
  transition-timing-function: var(--textSlidingBackTransitionTimingFunction, var(--uiTextSlidingDefaultTransitionTiming));
  transition-delay: var(--textSlidingBackTransitionDelay, var(--uiTextSlidingDefaultTransitionDelay));
  transition-duration: var(--textSlidingBackTransitionDuration, var(--uiTextSlidingDefaultTransitionDuration));  
  
  will-change: var(--textSlidingBackWillChange, --uiTextSlidingDefaultWillChange);
}

.text-sliding__label{
  display: var(--textSlidingFrontDisplay, block);
  color: var(--textSlidingFrontColor, --uiTextSlidingDefaultColor);
  transform: var(--textSlidingFrontTransform);

  transition-property: var(--textSlidingBackTransitionProperty, var(--uiTextSlidingDefaultTransitionProperty));
  transition-timing-function: var(--textSlidingBackTransitionTimingFunction, var(--uiTextSlidingDefaultTransitionTiming));
  transition-delay: var(--textSlidingBackTransitionDelay, var(--uiTextSlidingDefaultTransitionDelay));
  transition-duration: var(--textSlidingBackTransitionDuration, var(--uiTextSlidingDefaultTransitionDuration));  
  
  will-change: var(--textSlidingFrontWillChange, --uiTextSlidingDefaultWillChange);
}

/*
EFFECTS
*/

.text-underlined_v3{
  --textUnderlinedLineTransform: translate3d(-105%, 0, 0);
}

.text-underlined_v3:hover{
  --textUnderlinedLineTransform: translate3d(0, 0, 0);
}

.text-underlined_v4{
  --textUnderlinedLineTransform: translate3d(0, 105%, 0);

}

.text-underlined_v4:hover{
  --textUnderlinedLineTransform: translate3d(0, 0, 0);
}

.text-outlined_v1:hover,
.text-outlined_v5:hover{
  --textOutlineTopLineTransform: translate3d(0, 0, 0);
  --textOutlineRightLineTransform: translate3d(0 0, 0);  
  --textOutlineBottomLineTransform: translate3d(0, 0, 0);
  --textOutlineLeftLineTransform: translate3d(0, 0, 0);

  --textOutlineTopLineTransitionDuration: .25s;
  --textOutlineRightLineTransitionDuration: .25s;  
  --textOutlineBottomLineTransitionDuration: .25s;  
  --textOutlineLeftLineTransitionDuration: .25s;

  --textOutlineTopLineTransitionDelay: 0s;
  --textOutlineRightLineTransitionDelay: 0s;
  --textOutlineBottomLineTransitionDelay: 0s;
  --textOutlineLeftLineTransitionDelay: 0s;  
}

.text-outlined_v5{
  --textOutlineTopLineTransform: translate3d(-100%, 0, 0);
  --textOutlineRightLineTransform: translate3d(0, -100%, 0);  
  --textOutlineBottomLineTransform: translate3d(100%, 0, 0);
  --textOutlineLeftLineTransform: translate3d(0, 100%, 0);
}

.text-outlined_v6{
  --textOutlineTopLineTransform: translate3d(-105%, 0, 0);
  --textOutlineRightLineTransform: translate3d(0, -105%, 0);  
  --textOutlineBottomLineTransform: translate3d(105%, 0, 0);
  --textOutlineLeftLineTransform: translate3d(0, 105%, 0);

  --textOutlineTopLineTransitionDuration: .2s;
  --textOutlineRightLineTransitionDuration: .2s;  
  --textOutlineBottomLineTransitionDuration: .2s;  
  --textOutlineLeftLineTransitionDuration: .2s;

  --textOutlineTopLineTransitionDelay: .35s;
  --textOutlineRightLineTransitionDelay: .25s;
  --textOutlineBottomLineTransitionDelay: .15s;
  --textOutlineLeftLineTransitionDelay: 0s;  
}

.text-outlined_v6:hover{
  --textOutlineTopLineTransform: translate3d(0, 0, 0);
  --textOutlineRightLineTransform: translate3d(0 0, 0);  
  --textOutlineBottomLineTransform: translate3d(0, 0, 0);
  --textOutlineLeftLineTransform: translate3d(0, 0, 0);

  --textOutlineTopLineTransitionDelay: 0s;
  --textOutlineRightLineTransitionDelay: .15s;
  --textOutlineBottomLineTransitionDelay: .25s;
  --textOutlineLeftLineTransitionDelay: .35s;  
}

.text-sliding_v7{
  --textSlidingBackTransform: translate3d(-110%, 0, 0);
  --textSlidingFrontTransform: translate3d(0, 0, 0);
}

.text-sliding_v7:hover{
  --textSlidingBackTransform: translate3d(0, 0, 0);
  --textSlidingFrontTransform: translate3d(110%, 0, 0);
}

.text-sliding_v8{
  --textSlidingBackTransform: translate3d(0, 140%, 0);
  --textSlidingFrontTransform: translate3d(0, 0, 0);
}

.text-sliding_v8:hover{
  --textSlidingBackTransform: translate3d(0, 0, 0);
  --textSlidingFrontTransform: translate3d(0, -140%, 0);
}

.text-flat_v9{
  --textFlatFirstPlaneWidth: 50%;
  --textFlatFirstPlaneHeight: 100%;
  --textFlatFirstPlaneTop: 0;
  --textFlatFirstPlaneLeft: 0;  
  --textFlatFirstPlaneTransform: translate3d(-100%, 0, 0);
  --textFlatFirstPlaneTransitionDuration: .28s;

  --textFlatSecondPlaneWidth: 50%;
  --textFlatSecondPlaneHeigth: 100%;
  --textFlatSecondPlaneTop: 0;
  --textFlatSecondPlaneRight: 0;
  --textFlatSecondPlaneTransform: translate3d(100%, 0, 0);
  --textFlatSecondPlaneTransitionDuration: .28s;
}

.text-flat_v9:hover{
  --textFlatFirstPlaneTransform: translate3d(0, 0, 0);
  --textFlatSecondPlaneTransform: translate3d(0, 0, 0);
  --textFlatSecondPlaneTransitionDuration: .18s;
  --textFlatSecondPlaneTransitionDuration: .18s;
}

.text-flat_v10{
  --textFlatFirstPlaneWidth: 100%;
  --textFlatFirstPlaneHeight: 50%;
  --textFlatFirstPlaneTop: 0;
  --textFlatFirstPlaneLeft: 0;  
  --textFlatFirstPlaneTransform: translate3d(0, -50%, 0);
  --textFlatFirstPlaneTransitionDuration: .28s;

  --textFlatSecondPlaneWidth: 100%;
  --textFlatSecondPlaneHeigth: 50%;
  --textFlatSecondPlaneBottom: 0;
  --textFlatSecondPlaneLeft: 0;
  --textFlatSecondPlaneTransform: translate3d(0, 50%, 0);
  --textFlatSecondPlaneTransitionDuration: .28s;
}

.text-flat_v10:hover{
  --textFlatFirstPlaneTransform: translate3d(0, 0, 0);
  --textFlatSecondPlaneTransform: translate3d(0, 0, 0);
  --textFlatSecondPlaneTransitionDuration: .18s;
  --textFlatSecondPlaneTransitionDuration: .18s;
}

.text-flat_v11{
  --textFlatFirstPlaneWidth: 51%;
  --textFlatFirstPlaneHeight: 100%;
  --textFlatFirstPlaneTop: 0;
  --textFlatFirstPlaneLeft: 0;
  --textFlatFirstPlaneTransform: rotate(360deg);
  --textFlatFirstPlaneTransitionDuration: .35s;

  --textFlatSecondPlaneWidth: 51%;
  --textFlatSecondPlaneHeigth: 100%;
  --textFlatSecondPlaneTop: 0;
  --textFlatSecondPlaneRight: 0;
  --textFlatSecondPlaneTransform: rotate(360deg);
  --textFlatSecondPlaneTransitionDuration: .35s;
}

.text-flat_v11:hover{
  --textFlatFirstPlaneTransform: rotate(0);
  --textFlatSecondPlaneTransform: rotate(0);
}

.text-flat_v12{
  --textFlatFirstPlaneWidth: 51%;
  --textFlatFirstPlaneHeight: 100%;
  --textFlatFirstPlaneTransform: translate3d(-100%, 0, 0) rotate(-45deg);
  --textFlatFirstPlaneTransitionDuration: .35s;

  --textFlatSecondPlaneWidth: 51%;
  --textFlatSecondPlaneHeigth: 100%;
  --textFlatSecondPlaneRight: 0;
  --textFlatSecondPlaneTransform: translate3d(100%, 0, 0) rotate(-45deg);
  --textFlatSecondPlaneTransitionDuration: .35s;
}

.text-flat_v12:hover{
  --textFlatFirstPlaneTransform: translate3d(0, 0, 0) rotate(0);
  --textFlatSecondPlaneTransform: translate3d(0, 0, 0) rotate(0);
}


/*
SETTINGS
*/

:root{
  --textOutlinedWeight: 5px;
  --textOutlinedLineColor: #243aab;
  --textOutlinedPadding: .75rem 1rem;
  --textUnderlinedLineHeight: 5px;
  --textUnderlinedLineGap: .25rem;
  --textUnderlinedLineColor: #243aab;
  --textFlatBackgroundColor: #243aab;
  --textFlatPadding: .75rem;
}

.text-flat{
  --linkTextColorHover: #fff;
}















/* roomchecklist */

.body-containercheck{
	width:1500px;
	clear:both;
    box-sizing: border-box;  /* padding과 border는 크기에 포함되지 않음 */
    margin: 0px auto 15px;
    min-height: 500px;
	
}


.listname{
	width: 400px;
	height: 40px;
	padding: 5px;
	padding-left: 15px;
	border: 1px solid #999999;
	color: #333333;
	margin:250px 0 0 0;
	font-size: 20px;
	border-radius: 4px;
	text-align: center;
}

.listname:focus{
	border: 1px solid #ff8000;
}

.checklist{
	background-image: url("../../images/room/checklistimg.png");
	background-position: center;
	background-size:cover;
	background-position:center; 
	width:100%; 
	height: 1500px;
	margin-bottom: 100px;
}


.listdiv{
	height: 1300px;
	width: 610px;
	margin-left: 230px;
	margin-top: 10px;
}

.listTable{
	width: 750px;
	font-size: 20px;
}

.checkbox{
	transform : scale(1.7);
}
.radio{
	transform : scale(1.7);
}

.bottonbtn{
	font-size: 15px; 
	border:none;
	background:#d7def7;
	width: 150px;
	height: 50px;
	border-radius:4px;
	color: #000;
	margin: 10px;
}



.mylistbtn{
	font-size: 15px; 
	border:none;
	background:#d7def7;
	width: 130px;
	height: 40px;
	border-radius:4px;
	color: #000;
	margin: 10px;
}

.bottonbtn:hover{
	background:#a7b7ed;
}

.toptitle{
	width: 900px; 
	margin: 0px auto; 
	padding-left:130px; 
	padding-top: 100px;
	font-size: 30px;
	color: gray;
}

.toptitleP{
	padding:20px;
	 width: 750px;
	 height: 50px;
}
.toptitleP:hover{
	box-shadow: 0 0 20px #c0c0c0;
}

.mylisttit{
	border: 5px solid #c0c0c0;
	color: #808080;
	font-size: 20px;
	padding: 5px;
}

.rightdiv:hover{
	box-shadow: 0 0 2px #c0c0c0;
}

.memoimg{
	background-image: url("../../images/room/postitimg.png");
	background-position: center;
	background-size:cover;
	background-position:center; 
	width:100px; 
	height: 100px;
	padding: 50px 0 0 20px;
}
.memoimg:hover{
	cursor: pointer;
	color:#0000ff;
}














/*roomCreated*/
.createdtoptitleP{
	width: 900px; 
	margin: 0px auto; 
	padding-left:140px; 
	padding-top: 100px;
	font-size: 25px;
	color: gray;
}

.acc:hover{
	box-shadow: 0 0 20px #c0c0c0;
	background: #ffeb5e;
}

.addrbtn{
	font-size: 15px; 
	border:none;
	background:#ffeb5e;
	width: 100px;
	height: 35px;
	border-radius:4px;
	color: #000;
	margin: 10px;
}

.addrbtn:hover, .roomCreatedbtn:hover{
	background:#ffad15;
}

.roomboxTF{
	width: 200px;
	height: 20px;
	padding: 5px;
	padding-left: 15px;
	border: 1px solid #999999;
	color: #333333;
	margin-top: 5px;
	margin-bottom: 5px;
	font-size: 14px;
	border-radius: 1px;
}

.roomCreatedbtn{
	font-size: 20px; 
	font-weight:bold;
	border:none;
	background:#ffeb5e;
	width: 150px;
	height: 50px;
	border-radius:4px;
	color: #000;
	margin: 10px;
}

		/*상세 정보 입력 창*/
.add-table tr > th{
	background: #eee;
	width: 100px;
	padding: 10px 10px 10px 10px;
}

.i-gray{
	width:500px;
	background: #eee;
	margin: 10px 0 10px 10px;
	padding: 5px;
}

.description{
	width: 800px;
	height : 130px;
	margin: 10px 0 10px 10px;
	resize: none;
}

.add-table input[type=text], .add-table select{
	margin-left: 10px;
}
.add-table input[type=checkbox]{
	margin: 10px 0 10px 0;
}
.i-options, .has-col, .size, .floor, .elev{
	padding-left: 10px;
}

.fc-red1{
	color:red;
	font-size: 13px;
}
.imagePreView {
   margin-top: 50px;
   /*border:1px solid gray;*/
   box-sizing: border-box;
}
.imagePreView img{
   width:300px; 
   height:150px;  
   box-sizing: border-box;
}













/*article*/

/*지도 api---------------*/


#container {overflow:hidden;height:300px;position:relative;}
#mapWrapper {width:100%;height:300px;z-index:1;}
#rvWrapper {width:50%;height:300px;top:0;right:0;position:absolute;z-index:0;}
#container.view_roadview #mapWrapper {width: 50%;}
#roadviewControl {position:absolute;top:5px;left:5px;width:42px;height:42px;z-index: 1;cursor: pointer; background: url(https://t1.daumcdn.net/localimg/localimages/07/2018/pc/common/img_search.png) 0 -450px no-repeat;}
#roadviewControl.active {background-position:0 -350px;}
#close {position: absolute;padding: 4px;top: 5px;left: 5px;cursor: pointer;background: #fff;border-radius: 4px;border: 1px solid #c8c8c8;box-shadow: 0px 1px #888;}
#close .img {display: block;background: url(https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/rv_close.png) no-repeat;width: 14px;height: 14px;}




/*-------------------*/


/*GLOBALS*/
*{margin:0; padding:0; list-style:none;}


#wrapper{
  width:600px;
  margin:50px auto;
  height:400px;
  position:relative;
  color:#fff;
  text-shadow:rgba(0,0,0,0.1) 2px 2px 0px;  
}

#slider-wrap{
  width:600px;
  height:400px;
  position:relative;
  overflow:hidden;
}

#slider-wrap ul#slider{
  width:100%;
  height:100%;
  
  position:absolute;
  top:0;
  left:0;   
}

#slider-wrap ul#slider li{
  float:left;
  position:relative;
  width:600px;
  height:400px; 
}

#slider-wrap ul#slider li > div{
  position:absolute;
  top:20px;
  left:35px;  
}

#slider-wrap ul#slider li > div h3{
  font-size:36px;
  text-transform:uppercase; 
}

#slider-wrap ul#slider li > div span{
  font-family: Neucha, Arial, sans serif;
  font-size:21px;
}

#slider-wrap ul#slider li img{
  display:block;
  width:100%;
  height: 100%;
}

#ui-id-1{
	width: 1000px;
    display: inline-block;
    text-align: left;
    font-size: 20px;
    margin: 0 0 0 0;
    box-sizing: border-box;
}



/*btns*/
.btns{
  position:absolute;
  width:50px;
  height:60px;
  top:50%;
  margin-top:-25px;
  line-height:57px;
  text-align:center;
  cursor:pointer; 
  background:rgba(0,0,0,0.1);
  z-index:100;
  
  
  -webkit-user-select: none;  
  -moz-user-select: none; 
  -khtml-user-select: none; 
  -ms-user-select: none;
  
  -webkit-transition: all 0.1s ease;
  -moz-transition: all 0.1s ease;
  -o-transition: all 0.1s ease;
  -ms-transition: all 0.1s ease;
  transition: all 0.1s ease;
}

.btns:hover{
  background:rgba(0,0,0,0.3); 
}

#next{right:-50px; border-radius:7px 0px 0px 7px;}
#previous{left:-50px; border-radius:0px 7px 7px 7px;}
#counter{
  top: 30px; 
  right:35px; 
  width:auto;
  position:absolute;
}

#slider-wrap.active #next{right:0px;}
#slider-wrap.active #previous{left:0px;}


/*bar*/
#pagination-wrap{
  min-width:20px;
  margin-top:350px;
  margin-left: auto; 
  margin-right: auto;
  height:15px;
  position:relative;
  text-align:center;
}

#pagination-wrap ul {
  width:100%;
}

#pagination-wrap ul li{
  margin: 0 4px;
  display: inline-block;
  width:5px;
  height:5px;
  border-radius:50%;
  background:#fff;
  opacity:0.5;
  position:relative;
  top:0;
  
  
}

#pagination-wrap ul li.active{
  width:12px;
  height:12px;
  top:3px;
  opacity:1;
  box-shadow:rgba(0,0,0,0.1) 1px 1px 0px; 
}




/*Header*/
h1, h2{text-shadow:none; text-align:center;}
h1{ color: #666; text-transform:uppercase;  font-size:36px;}
h2{ color: #7f8c8d; font-family: Neucha, Arial, sans serif; font-size:18px; margin-bottom:30px;} 




/*ANIMATION*/
#slider-wrap ul, #pagination-wrap ul li{
  -webkit-transition: all 0.3s cubic-bezier(1,.01,.32,1);
  -moz-transition: all 0.3s cubic-bezier(1,.01,.32,1);
  -o-transition: all 0.3s cubic-bezier(1,.01,.32,1);
  -ms-transition: all 0.3s cubic-bezier(1,.01,.32,1);
  transition: all 0.3s cubic-bezier(1,.01,.32,1); 
}


#wrapper{
	transform : scale(1.7);
}

.h-ReplyBody{
    width: 100%;
    min-height:150px;
    margin: 0 auto;
    /* TestBackground */
    /* background-color: rgba(222, 188, 255, 0.31); */
}

.h-ReplyContentBox{
    width: 100%;
    height: 100px;
    border-radius: 5px;
    margin: 30px auto;
    padding: 10px;
    box-sizing: border-box;
    border: 2px solid rgb(226,226,226);
    /* TestBackground */
    /* background-color: rgba(130, 43, 218, 0.31); */
}
.h-ReplyContentBox>span{
    font-size: 0.8rem;
    font-weight: 400;
}
.h-ReplyContentBox>textarea{
    width: 100%;
    resize: none;
    display: block;
    border: none;
    /* TestBackground */
    /* background-color: rgba(130, 43, 218, 0.31); */
}
.h-ReplyContentBox>textarea:focus{
   outline: none;
   
}
.h-ReplyContentBox>textarea::placeholder{
    color: rgb(226,226,226);
}
.h-ReplySubmitButton{
 width: 100%;
 height: 20%;
 /* TestBackground */
 /* background-color: #ff6347; */
}
.h-Replybtn{
    width: 70px;
    height: 30px;
    border:none;
    cursor: pointer;
    border-radius: 5px;
    float: right;
    transition: 0.1s;
    color: rgb(136, 136, 136);
    box-shadow: 0px 0px 10px  rgba(128, 128, 128, 0.529);
}
.h-Replybtn:hover{
background: rgb(174, 174, 174);
color: aliceblue;
}
.h-Replybtn:active{
transform: scale(0.9);
}
.h-Replybtn:focus{
outline: none;
}
.h-ReplyList{
    width: 100%;
    margin: 10px auto;
    box-sizing: border-box;
    /* TestBackground */
    /* background-color: rgba(222, 188, 255, 0.31); */
}
.h-replyList2 {
    width: 100%;
    margin: 10px auto;
}
@charset "UTF-8";
.h-reply-table{
    width: 100%;
    border-spacing: 0px;
    margin: 0 auto;
} 
.replybody-tr {
    height: 30px;
}
.replybody-td1 {
    width : 50%; 
    padding:5px 5px; 
    border-top:1px solid #cccccc; 
    border-right:none;
}
.replybody-td2 {
    width : 50%; 
    padding:5px 5px; 
    border-top : 1px solid #cccccc; 
    border-left:none; 
    text-align: right;
}
.h-deleteReply {
    cursor: pointer;
}
.reply-content {
    column-span: 2;
    padding:5px 5px;
    vertical-align: top;
}
.h-reply-count {
    padding:7px 5px;
}
.h-reply-like {
    padding:7px 5px; 
    text-align : right;
}
/* 왜 안먹는가... */
/* .replym { */
/*     margin-bottom: 10px; */
/* } */
.h-reply-btnlike {
    width: 70px;
    height: 30px;
    border: none;
    border-radius: 5px;
}
.h-btnReplyAnswerLayout {
    width: 90px;
    height: 30px;
    border: none;
    border-radius: 5px;
}
.replyAnswer{
	
}
.h-answerList {
    border-top: 1px solid #cccccc;'
}
.h-replytextbox {
    clear: both; 
    padding: 10px 30px;
    height: 70px;
}
.replyL{
    float: left; 
    width: 30px;
}
.replyareabox {
    float: left; 
    width:800px;
}
.replyarea {
    width:840px;
    height: 70px;
}
.reply2button {
    width: 800px;
    text-align: right;
    margin: 0 auto;
    height: 40px;
}
.h-sendreply2btn {
    width: 70px;
    height: 30px;
    border: none;
    border-radius: 5px;
}









/*-----------------------------------------------*/

.linediv{
	padding: 10px;
	margin:20px auto;
}

.option{
	margin:10px;
	text-align: center; 
	width: 150px; 
	height: 150px;
	display: inline-block;
}
.option img{
	width: 100px;
	height: 100px;
}


/*-----------------------------------------*/
.roomtype{
	font-size: 30px;
}
.subtitles{
	padding-top: 10px;
	font-size: 20px;
	
}
.firstexpl{
	font-size: 30px;
	color: #000080;
	font-weight: bold;
}

.secondtable td{
	font-size:20px;
	border-bottom: 1px solid gray;
}

.secondtable td:first-child{
	background: #eee;
	width: 100px;
	padding: 10px 10px 10px 10px;
}

.secondtable td:nth-child( 2 ){
	padding: 15px;
}


			